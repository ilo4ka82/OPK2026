from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext

from config import config  
from keyboards import (  
    get_main_menu, 
    get_ai_menu, 
    get_handbook_menu,
    get_timesheet_menu,
    get_tech_menu
)
from states import BotStates
from handlers.handbook import is_admin

async def check_access(message: types.Message) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = message.from_user.id
    
    if config.ALLOW_ALL:
        return True
    
    if user_id not in config.ALLOWED_USERS:
        await message.answer(
            "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.\n"
            "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )
        return False
    
    return True

async def cmd_start(message: types.Message, state: FSMContext):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
    if not await check_access(message):
        return
    
    user_name = message.from_user.first_name
    
    await message.answer(
        f"üëã –ü—Ä–∏–≤–µ—Ç, <b>{user_name}</b>!\n\n"
        f"–Ø ‚Äî –ø–æ–º–æ—â–Ω–∏–∫ –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏.\n"
        f"–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:",
        parse_mode="HTML",
        reply_markup=get_main_menu()
    )
    
    await BotStates.main_menu.set()

async def main_menu_handler(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    
    text = message.text
    user_id = message.from_user.id
    
    if text == "ü§ñ AI-–ø–æ–º–æ—â–Ω–∏–∫":
        await message.answer(
            "ü§ñ <b>AI-–ø–æ–º–æ—â–Ω–∏–∫</b>\n\n"
            "–Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏.\n"
            "–ó–∞–¥–∞–≤–∞–π –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã!\n\n"
            "<i>‚ö†Ô∏è AI –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ - —ç—Ç–æ –∑–∞–≥–ª—É—à–∫–∞</i>",
            parse_mode="HTML",
            reply_markup=get_ai_menu()
        )
        await BotStates.ai_menu.set()
    
    elif text == "üìö –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫":
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞
        from gateway_bot.handlers.handbook import is_admin
        admin = is_admin(user_id)
        
        admin_text = ""
        if admin:
            admin_text = "\n\nüë®‚Äçüíº <b>–†–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>\n–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã"
        
        await message.answer(
            f"üìö <b>–°–ø—Ä–∞–≤–æ—á–Ω–æ–µ –±—é—Ä–æ</b>\n\n"
            f"–ó–¥–µ—Å—å —Ö—Ä–∞–Ω—è—Ç—Å—è –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –º–µ—Ç–æ–¥–∏—á–∫–∏ –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏.{admin_text}",
            parse_mode="HTML",
            reply_markup=get_handbook_menu(admin)
        )
        await BotStates.handbook_menu.set()
    
    elif text == "‚è∞ –¢–∞–±–µ–ª—å":
        await message.answer(
            "‚è∞ <b>–¢–∞–±–µ–ª—å —É—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏</b>\n\n"
            "üöß <i>–ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–µ—Ä–µ–ø–∏—Å–∞–Ω–Ω—ã–π —Ç–∞–±–µ–ª—å —Å –¥—Ä—É–≥–æ–≥–æ –±–æ—Ç–∞</i>\n\n"
            "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:\n"
            "‚Ä¢ –ù–∞—á–∞–ª–æ/–∫–æ–Ω–µ—Ü —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è\n"
            "‚Ä¢ –ü–µ—Ä–µ—Ä—ã–≤—ã\n"
            "‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–∏\n"
            "‚Ä¢ –û—Ç—á–µ—Ç—ã",
            parse_mode="HTML",
            reply_markup=get_timesheet_menu()
        )
        await BotStates.timesheet_menu.set()
    
    elif text == "üîß –¢–µ—Ö.—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç":
        await message.answer(
            "üîß <b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç</b>\n\n"
            "üöß <i>–ó–¥–µ—Å—å –±—É–¥—É—Ç —Ñ—É–Ω–∫—Ü–∏–∏:</i>\n\n"
            "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á (–∫–æ–¥ –µ—Å—Ç—å –≤ –¥—Ä—É–≥–æ–º –±–æ—Ç–µ)\n"
            "‚Ä¢ –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞ (–¥–æ–ø–∏—à–µ—à—å –ø–æ–∑–∂–µ)\n"
            "‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤\n"
            "‚Ä¢ –°–ª—É–∂–µ–±–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã",
            parse_mode="HTML",
            reply_markup=get_tech_menu()
        )
        await BotStates.tech_menu.set()
    
    else:
        await message.answer(
            "‚ùì –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é",
            reply_markup=get_main_menu()
        )

async def back_to_main(message: types.Message, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await message.answer(
        "üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>",
        parse_mode="HTML",
        reply_markup=get_main_menu()
    )
    await BotStates.main_menu.set()

# ===== AI-–ø–æ–º–æ—â–Ω–∏–∫ (–∑–∞–≥–ª—É—à–∫–∏) =====

async def ai_menu_handler(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é AI"""
    
    text = message.text
    
    if text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        await message.answer(
            "‚úèÔ∏è –ó–∞–¥–∞–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–æ–º:",
            reply_markup=get_ai_menu()
        )
        await BotStates.ai_asking.set()
    
    elif text == "üßπ –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é":
        await message.answer(
            "‚úÖ –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –æ—á–∏—â–µ–Ω–∞!",
            reply_markup=get_ai_menu()
        )
    
    elif text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
        await message.answer(
            "üìä <b>–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n\n"
            "–í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤: 0\n"
            "–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å: ‚Äî\n\n"
            "<i>‚ö†Ô∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç</i>",
            parse_mode="HTML",
            reply_markup=get_ai_menu()
        )
    
    else:
        await message.answer(
            "–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é",
            reply_markup=get_ai_menu()
        )

async def ai_question_handler(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –∫ AI"""
    
    question = message.text
    
    # –ü–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞
    await message.answer(
        f"‚ùì –¢–≤–æ–π –≤–æ–ø—Ä–æ—Å:\n<i>{question}</i>\n\n"
        f"ü§ñ <b>–û—Ç–≤–µ—Ç:</b>\n"
        f"[AI-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω]\n\n"
        f"–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç —É–º–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤!",
        parse_mode="HTML",
        reply_markup=get_ai_menu()
    )
    
    await BotStates.ai_menu.set()

# ===== –¢–∞–±–µ–ª—å (–∑–∞–≥–ª—É—à–∫–∏) =====

async def timesheet_menu_handler(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é —Ç–∞–±–µ–ª—è"""
    
    await message.answer(
        "‚è∞ <b>–¢–∞–±–µ–ª—å —É—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏</b>\n\n"
        "üöß <i>–ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–µ—Ä–µ–ø–∏—Å–∞–Ω–Ω—ã–π —Ç–∞–±–µ–ª—å —Å –¥—Ä—É–≥–æ–≥–æ –±–æ—Ç–∞</i>\n\n"
        "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:\n"
        "‚Ä¢ –ù–∞—á–∞–ª–æ/–∫–æ–Ω–µ—Ü —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è\n"
        "‚Ä¢ –ü–µ—Ä–µ—Ä—ã–≤—ã\n"
        "‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–∏\n"
        "‚Ä¢ –û—Ç—á–µ—Ç—ã",
        parse_mode="HTML",
        reply_markup=get_timesheet_menu()
    )

# ===== –¢–µ—Ö.—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç (–∑–∞–≥–ª—É—à–∫–∏) =====

async def tech_menu_handler(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é —Ç–µ—Ö.—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞"""
    
    await message.answer(
        "üîß <b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç</b>\n\n"
        "üöß <i>–ó–¥–µ—Å—å –±—É–¥—É—Ç —Ñ—É–Ω–∫—Ü–∏–∏:</i>\n\n"
        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á (–∫–æ–¥ –µ—Å—Ç—å –≤ –¥—Ä—É–≥–æ–º –±–æ—Ç–µ)\n"
        "‚Ä¢ –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞ (–¥–æ–ø–∏—à–µ—à—å –ø–æ–∑–∂–µ)\n"
        "‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤\n"
        "‚Ä¢ –°–ª—É–∂–µ–±–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã",
        parse_mode="HTML",
        reply_markup=get_tech_menu()
    )

def register_handlers(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    
    # /start
    dp.register_message_handler(cmd_start, commands=['start'], state="*")
    
    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    dp.register_message_handler(main_menu_handler, state=BotStates.main_menu)
    
    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    dp.register_message_handler(
        back_to_main,
        lambda msg: msg.text == "‚óÄÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        state="*"
    )
    
    # AI-–ø–æ–º–æ—â–Ω–∏–∫
    dp.register_message_handler(ai_menu_handler, state=BotStates.ai_menu)
    dp.register_message_handler(ai_question_handler, state=BotStates.ai_asking)
    
    # –¢–∞–±–µ–ª—å
    dp.register_message_handler(timesheet_menu_handler, state=BotStates.timesheet_menu)
    
    # –¢–µ—Ö.—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç
    dp.register_message_handler(tech_menu_handler, state=BotStates.tech_menu)